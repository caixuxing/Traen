// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Trasen.PaperFree.Infrastructure.Database.DbContext;

#nullable disable

namespace Trasen.PaperFree.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240417033550_rm_ProcessNode_REJECT_NODE_ID")]
    partial class rm_ProcessNode_REJECT_NODE_ID
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Trasen.PaperFree.Domain.ArchiveRecord.Entity.ArchiveApply", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<string>("ApplyPersonName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("APPLY_PERSON_NAME")
                        .HasComment("申请人姓名");

                    b.Property<string>("ArchiveId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVAL_ID")
                        .HasComment("档案号");

                    b.Property<string>("ArchiveName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVE_NAME")
                        .HasComment("申请名称,默认为当前病案人归档作为名称，批量为批量归档申请");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("CurrentApprovalNodeId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CURRENT_APPROVAL_NODE_ID")
                        .HasComment("当前审批节点ID ");

                    b.Property<string>("CurrentApprovalNodeName")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CURRENT_APPROVAL_NODE_NAME")
                        .HasComment("当前审批节点名称");

                    b.Property<int>("CurrentStatus")
                        .HasMaxLength(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CURRENT_STATUS")
                        .HasComment("状态 流程状态：开始》审批中》结束 、作废");

                    b.Property<string>("HospCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<bool>("IsEnd")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_END")
                        .HasComment("流程是否结束 状态：是 、否");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("NodeApprovaName")
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR2(1000)")
                        .HasColumnName("NODE_APPROVA_NAME")
                        .HasComment("当前节点审批人名称");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("机构编码");

                    b.Property<string>("ProcessDesignId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PROCESS_DESIGN_ID")
                        .HasComment("流程模板ID 绑定当前当前申请审批模板");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.ToTable("ARCHIVE_APPLY", (string)null);

                    b.HasComment("归档申请");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.ArchiveRecord.Entity.ArchiveApprover", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<string>("ApprovalId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("APPROVAL_ID")
                        .HasComment("审批人ID");

                    b.Property<string>("ApprovalRemark")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)")
                        .HasColumnName("APPROVAL_REMARK")
                        .HasComment("审批备注");

                    b.Property<string>("ApprovalResult")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("APPROVAL_RESULT")
                        .HasComment("审批结果");

                    b.Property<string>("ArchiveApplyId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVE_APPLY_ID")
                        .HasComment("归档申请ID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.Property<string>("WorkFlowStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("Work_Flow_Status")
                        .HasComment("流程状态");

                    b.Property<DateTime>("approvalDateTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("APPROVAL_DATE_TIME")
                        .HasComment("审批时间");

                    b.HasKey("Id");

                    b.HasIndex("ArchiveApplyId")
                        .HasDatabaseName("IX_ARCHIVE_APPLY_ID");

                    b.ToTable("ARCHIVE_APPROVER", (string)null);

                    b.HasComment("归档审批记录表");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.ArchiveRecord.Entity.ArchiverMeum", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("HospCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<string>("IsAllorg")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("IS_ALLORG")
                        .HasComment("是否适用所有机构（0、否；1、是）");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("IsHighShots")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("IS_HIGHSHOTS")
                        .HasComment("是否高拍");

                    b.Property<string>("IsSignature")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("IS_SIGNATURE")
                        .HasComment("是否签名");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("MENU_NAME")
                        .HasComment("目录名称");

                    b.Property<string>("MeumType")
                        .HasMaxLength(4)
                        .HasColumnType("NVARCHAR2(4)")
                        .HasColumnName("MEUM_TYPE")
                        .HasComment("目录类型（1、目录，2、节点）");

                    b.Property<int>("Orderby")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORDERBY")
                        .HasComment("排序");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("机构编码");

                    b.Property<string>("ParentId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PARENT_ID")
                        .HasComment("上级目录ID");

                    b.Property<string>("Permission")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("PERMISSION")
                        .HasComment("根据权限设置医护所能操作的目录");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.Property<string>("SecretLevel")
                        .HasMaxLength(4)
                        .HasColumnType("NVARCHAR2(4)")
                        .HasColumnName("SECRET_LEVEL")
                        .HasComment("保密等级");

                    b.HasKey("Id");

                    b.ToTable("ARCHIVER_MEUM", (string)null);

                    b.HasComment("归档菜单目录");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.FileTable.Entity.FilesHis", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<string>("ArchiveId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVE_ID")
                        .HasComment("档案号ID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("DataType")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("DATA_TYPE")
                        .HasComment("数据类型 1 门诊 2 住院");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("FILE_ID")
                        .HasComment("文件唯-ID");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("FILE_PATH")
                        .HasComment("文件存储路径");

                    b.Property<string>("FileSavename")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("FILE_SAVENAME")
                        .HasComment("文件保存后名称");

                    b.Property<string>("FileSize")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("FILE_SIZE")
                        .HasComment("文件大小");

                    b.Property<string>("FileTruename")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("FILE_TRUENAME")
                        .HasComment("文件原名称");

                    b.Property<string>("FileType")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("FILE_TYPE")
                        .HasComment("文件类型格式");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("MeumId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("MEUM_ID")
                        .HasComment("病历目录表ID");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("ORDER_NO")
                        .HasComment("排序号");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("REMARK")
                        .HasComment("备注");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("STATUS")
                        .HasComment("状态【物理文件上传状态】");

                    b.Property<string>("StorageState")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("STORAGE_STATE")
                        .HasComment("文件存储状态【临时、正式】");

                    b.HasKey("Id");

                    b.ToTable("FILES_HIS", (string)null);

                    b.HasComment("HIS文件表");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.FileTable.Entity.FilesOther", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<string>("ArchiveId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVE_ID")
                        .HasComment("档案号ID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("FileCategoryCode")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("FILE_CATEGORY_CODE")
                        .HasComment("文件分类编码");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("FILE_ID")
                        .HasComment("文件唯-ID");

                    b.Property<string>("FilePath")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("FILE_PATH")
                        .HasComment("文件存储路径");

                    b.Property<string>("FileSavename")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("FILE_SAVENAME")
                        .HasComment("文件保存后名称");

                    b.Property<string>("FileSize")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("FILE_SIZE")
                        .HasComment("文件大小");

                    b.Property<string>("FileTruename")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("FILE_TRUENAME")
                        .HasComment("文件原名称");

                    b.Property<string>("FileType")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("FILE_TYPE")
                        .HasComment("文件类型格式");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("MenuId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("MENU_ID")
                        .HasComment("病历目录表ID");

                    b.Property<string>("OrderNo")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("ORDER_NO")
                        .HasComment("排序号");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("REMARK")
                        .HasComment("备注");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.Property<string>("SourceCode")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("SOURCE_CODE")
                        .HasComment("文件来源于哪个系统");

                    b.Property<int>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("STATUS")
                        .HasComment("状态【物理文件上传状态】");

                    b.Property<string>("StorageState")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("STORAGE_STATE")
                        .HasComment("文件存储状态【临时、正式】");

                    b.HasKey("Id");

                    b.ToTable("FILES_OTHER", (string)null);

                    b.HasComment("其他文件");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.IgnoreItme.Entity.IgnoreItmeTable", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<string>("ArchiveId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVE_ID")
                        .HasComment("档案号");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("MeumTreeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("MEUM_TREE_ID")
                        .HasComment("必传文件配置ID");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.ToTable("IGNORE_ITME", (string)null);

                    b.HasComment("科室档案目录必填项忽略");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.MedicalRecord.Entity.AnNotAtionTable", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<string>("AnNotAtIOn")
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR2(1000)")
                        .HasColumnName("ANNOTATION")
                        .HasComment("批注内容");

                    b.Property<DateTime?>("AnNotAtIOnDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("AN_NOT_ATION_DATE")
                        .HasComment("批注日期");

                    b.Property<string>("Archiveid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVE_ID")
                        .HasComment("档案号");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("Deptcode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("DEPT_CODE")
                        .HasComment("批注科室编码");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("FILE_ID")
                        .HasComment("文件id");

                    b.Property<string>("HospCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("Lower")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("LOWER")
                        .HasComment("评分 ");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("机构编码");

                    b.Property<string>("Remark")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("REMARK")
                        .HasComment("备注");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.ToTable("ANNOTATION_TABLE", (string)null);

                    b.HasComment("批注表");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.MedicalRecord.Entity.InpatientInfo", b =>
                {
                    b.Property<string>("ArchiveId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVE_ID")
                        .HasComment("档案号（主键）");

                    b.Property<string>("AdmissId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ADMISS_ID")
                        .HasComment("住院号");

                    b.Property<int?>("Age")
                        .HasMaxLength(3)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("AGE")
                        .HasComment("年龄");

                    b.Property<string>("ChargeNurseCode")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("CHARGE_NURSE_CODE")
                        .HasComment("责任护士编号");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATE_OF_BIRTH")
                        .HasComment("出生日期");

                    b.Property<string>("DoctorKzrCode")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("DOCTOR_KZR_CODE")
                        .HasComment("科主任编号");

                    b.Property<string>("DoctorZyysCode")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("DOCTOR_ZYYS_CODE")
                        .HasComment("住院医生编号");

                    b.Property<string>("DoctorZzysCode")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("DOCTOR_ZZYS_CODE")
                        .HasComment("主治医生编号");

                    b.Property<DateTime>("EnterDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ENTER_DATE")
                        .HasComment("入院时间");

                    b.Property<string>("EnterDept")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("ENTER_DEPT")
                        .HasComment("入院科室");

                    b.Property<string>("EnterWardCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("ENTER_WARD_CODE")
                        .HasComment("病区编码");

                    b.Property<string>("HospCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<string>("HospRecordId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_RECORD_ID")
                        .HasComment("档案号（主键）");

                    b.Property<string>("IdCard")
                        .HasMaxLength(18)
                        .HasColumnType("NVARCHAR2(18)")
                        .HasColumnName("ID_CARD")
                        .HasComment("身份证号");

                    b.Property<string>("InpatientId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("INPATIENT_ID")
                        .HasComment("住院ID");

                    b.Property<string>("InputCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("INPUT_CODE")
                        .HasComment("辖区编码");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("NAME")
                        .HasComment("姓名");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("机构编码");

                    b.Property<string>("SexType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("SEX_TYPE")
                        .HasComment("性别");

                    b.Property<int>("VisitId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("VISIT_ID")
                        .HasComment("住院次数");

                    b.HasKey("ArchiveId");

                    b.ToTable("INPATIENT_INFO", (string)null);

                    b.HasComment("在院病人就诊信息表");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.MedicalRecord.Entity.OutpatientEmergency", b =>
                {
                    b.Property<string>("ArchiveId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVEID")
                        .HasComment("档案号");

                    b.Property<int?>("Age")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("AGE")
                        .HasComment("患者年龄");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATE_OF_BIRTH")
                        .HasComment("出生日期");

                    b.Property<string>("HospCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<string>("HospRecordId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_RECORD_ID")
                        .HasComment("就诊号");

                    b.Property<string>("IcdCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ICD_CODE")
                        .HasComment("门诊诊断编码");

                    b.Property<string>("IcdName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("ICD_NAME")
                        .HasComment("门诊诊断名称");

                    b.Property<string>("IdCard")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID_CARD")
                        .HasComment("身份证号码");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("NAME")
                        .HasComment("患者姓名");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("机构编码");

                    b.Property<string>("ReceiveDoctorCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("RECEIVE_DOCTOR_CODE")
                        .HasComment("接诊医生");

                    b.Property<string>("SeeDeptCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("SEEDEPTCODE")
                        .HasComment("接诊科室");

                    b.Property<DateTime>("SeePatientsDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("SEE_PATIENTS_DATE")
                        .HasComment("接诊时间");

                    b.Property<int>("SexType")
                        .HasMaxLength(50)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SEXTYPE")
                        .HasComment("患者性别");

                    b.HasKey("ArchiveId");

                    b.ToTable("OUTPATIENT_EMERGENCY", (string)null);

                    b.HasComment("归档菜单目录");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.MedicalRecord.Entity.OutpatientInfo", b =>
                {
                    b.Property<string>("ArchiveId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVE_ID")
                        .HasComment("档案号（主键）");

                    b.Property<string>("AdmissId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ADMISS_ID")
                        .HasComment("住院号");

                    b.Property<int?>("Age")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("AGE")
                        .HasComment("年龄");

                    b.Property<string>("BasyStatus")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("BASY_STATUS")
                        .HasComment("首页录入标志（编目标志）");

                    b.Property<string>("CaseType")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("CASE_TYPE")
                        .HasComment("入院方式，1.门诊  2.住院");

                    b.Property<string>("ChargeNurseCode")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("CHARGE_NURSE_CODE")
                        .HasComment("责任护士编号");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE_TIME")
                        .HasComment("创建时间");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATE_OF_BIRTH")
                        .HasComment("出生日期");

                    b.Property<int?>("Days")
                        .HasMaxLength(20)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DAYS")
                        .HasComment("年龄(天)");

                    b.Property<string>("DoctorKzrCode")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("DOCTOR_KZR_CODE")
                        .HasComment("科主任编号");

                    b.Property<string>("DoctorZrysCode")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("DOCTOR_ZRYS_CODE")
                        .HasComment("主任医生编号");

                    b.Property<string>("DoctorZyysCode")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("DOCTOR_ZYYS_CODE")
                        .HasComment("住院医生编号");

                    b.Property<string>("DoctorZzysCode")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("DOCTOR_ZZYS_CODE")
                        .HasComment("主治医生编号");

                    b.Property<DateTime>("EnterDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ENTER_DATE")
                        .HasComment("入院时间");

                    b.Property<string>("EnterDeptCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("ENTER_DEPT_CODE")
                        .HasComment("入院科室");

                    b.Property<string>("Fileflag")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("FILE_FLAG")
                        .HasComment("文件采集标志（0未采集，1已采集）");

                    b.Property<string>("HospCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<string>("HospRecordId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_RECORD_ID")
                        .HasComment("就诊号");

                    b.Property<string>("IdCard")
                        .HasMaxLength(18)
                        .HasColumnType("NVARCHAR2(18)")
                        .HasColumnName("ID_CARD")
                        .HasComment("身份证号");

                    b.Property<string>("InpatientId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("INPATIENT_ID")
                        .HasComment("住院ID");

                    b.Property<string>("InputCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("INPUT_CODE")
                        .HasComment("辖区编码");

                    b.Property<string>("IsLock")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("IS_LOCK")
                        .HasComment("是否锁定（0未锁定，1锁定，2解锁,3解锁中）");

                    b.Property<string>("IsOverdate")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("IS_OVERDATE")
                        .HasComment("是否逾期");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("NAME")
                        .HasComment("姓名");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("机构编码");

                    b.Property<DateTime>("OutDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("OUT_DATE")
                        .HasComment("出院时间");

                    b.Property<string>("OutDeptCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("OUT_DEPT_CODE")
                        .HasComment("出院科室");

                    b.Property<string>("OutWardCode")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("OUT_WARD_CODE")
                        .HasComment("病区编码");

                    b.Property<string>("PatientId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PATIENT_ID")
                        .HasComment("病案号");

                    b.Property<string>("SexType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("SEX_TYPE")
                        .HasComment("性别");

                    b.Property<int>("Status")
                        .HasMaxLength(20)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("STATUS")
                        .HasComment("状态");

                    b.Property<int>("VisitId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("VISIT_ID")
                        .HasComment("住院次数");

                    b.HasKey("ArchiveId");

                    b.ToTable("OUTPATIENT_INFO", (string)null);

                    b.HasComment("在院病人就诊信息表");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.ProcessRecord.Entity.NodeApprover", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<string>("ApproverAccount")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("APPROVER_ACCOUNT")
                        .HasComment("审批人登录账户");

                    b.Property<string>("ApproverId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("APPROVER_ID")
                        .HasComment("审批人ID");

                    b.Property<string>("ApproverName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("APPROVER_NAME")
                        .HasComment("审批人姓名");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("ProcessNodeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PROCESS_NODE_ID")
                        .HasComment("节点ID");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.HasIndex("ProcessNodeId")
                        .HasDatabaseName("IX_APPROVER_ID");

                    b.ToTable("NODE_APPROVER", (string)null);

                    b.HasComment("节点审批人员表");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.ProcessRecord.Entity.ProcessDesign", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("DEPT_CODE")
                        .HasComment("科室编码");

                    b.Property<string>("HospCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ENABLE")
                        .HasComment("是否启用");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("机构编码");

                    b.Property<string>("ProcessCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("PROCESS_CODE")
                        .HasComment("流程名称");

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("PROCESS_NAME")
                        .HasComment("流程代码值");

                    b.Property<string>("ProcessTempType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("PROCESS_TEMP_TYPE")
                        .HasComment("流程模板类型");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.ToTable("PROCESS_DESIGN", (string)null);

                    b.HasComment("流程设计");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.ProcessRecord.Entity.ProcessNode", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("EventDirectionBranch")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("EVENT_DIRECTION")
                        .HasComment("事件方向 【拒绝、驳回、 通过】");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<bool?>("IsRejectToNode")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_REJECT_TO_NODE")
                        .HasComment("是否可驳回指定节点");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("LowerNodeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LOWER_NODE_ID")
                        .HasComment("下级节点");

                    b.Property<string>("NodeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("NODE_CODE")
                        .HasComment("节点代码值");

                    b.Property<int>("NodeMapWorkflowStatus")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("NODE_MAP_WORKFLOW_STATUS")
                        .HasComment("节点对应流程状态");

                    b.Property<string>("NodeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("NODE_NAME")
                        .HasComment("节点名称");

                    b.Property<int>("OderNo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ODER_NO")
                        .HasComment("排序号");

                    b.Property<string>("ProcessDesignId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PROCESS_DESIGN_ID")
                        .HasComment("流程主键ID");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.Property<string>("UpperNodeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("UPPER_NODE_ID")
                        .HasComment("上级节点");

                    b.HasKey("Id");

                    b.HasIndex("ProcessDesignId")
                        .HasDatabaseName("IX_PROCESS_DESIGN_ID");

                    b.ToTable("PROCESS_NODE", (string)null);

                    b.HasComment("流程节点");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.RecallRecord.Entity.RecallApply", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<string>("ApplyName")
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("APPLY_NAME")
                        .HasComment("申请名称");

                    b.Property<string>("ApplyPersonName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("APPLY_PERSON_NAME")
                        .HasComment("申请人姓名");

                    b.Property<string>("ApplyReason")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("APPLY_REASON")
                        .HasComment("申请原因");

                    b.Property<string>("ArchiveId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVE_ID")
                        .HasComment("档案号");

                    b.Property<string>("AttachmentMaterials")
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("ATTACHMENT_MATERIALS")
                        .HasComment("附件材料");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("CurrentApprovalNodeId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CURRENT_APPROVAL_NODE_ID")
                        .HasComment("当前审批节点ID");

                    b.Property<string>("CurrentApprovalNodeName")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CURRENT_APPROVAL_NODE_NAME")
                        .HasComment("当前审批节点名称");

                    b.Property<string>("CurrentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("CURRENT_STATUS")
                        .HasComment("状态");

                    b.Property<string>("HospCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<bool>("IsEnd")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_END")
                        .HasComment("是否结束");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("NodeApprovalName")
                        .HasMaxLength(1000)
                        .HasColumnType("NVARCHAR2(1000)")
                        .HasColumnName("NODE_APPROVAL_NAME")
                        .HasComment("当前节点审批人名称");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("机构编码");

                    b.Property<string>("ProcessDesignId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PROCESS_DESIGN_ID")
                        .HasComment("流程模板ID");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.ToTable("RECALL_APPLY", (string)null);

                    b.HasComment("召回申请");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.RecallRecord.Entity.RecallApplyAndArchival", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<string>("ArchivalId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVAL_ID")
                        .HasComment("档案号");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("RecallApplyId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("RECALL_APPLY_ID")
                        .HasComment("召回申请ID");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.HasIndex("RecallApplyId")
                        .HasDatabaseName("IX_RECALL_APPLY_ID");

                    b.ToTable("RECALL_APPLY_AND_ARCHIVAL", (string)null);

                    b.HasComment("召回档案申请关联表");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.RecallRecord.Entity.RecallApprover", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<DateTime>("ApprovalDateTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("APPROVAL_DATE_TIME")
                        .HasComment("审批时间");

                    b.Property<string>("ApprovalId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("APPROVAL_ID")
                        .HasComment("审批人ID");

                    b.Property<string>("ApprovalRemark")
                        .HasMaxLength(300)
                        .HasColumnType("NVARCHAR2(300)")
                        .HasColumnName("APPROVAL_REMARK")
                        .HasComment("审批备注");

                    b.Property<string>("ApprovalResult")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("APPROVAL_RESULT")
                        .HasComment("审批结果");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("RecallApplyId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("RECALL_APPLY_ID")
                        .HasComment("召回申请ID");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.Property<string>("WorkFlowStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("Work_Flow_Status")
                        .HasComment("流程状态");

                    b.HasKey("Id");

                    b.HasIndex("RecallApplyId")
                        .HasDatabaseName("IX_RECALLAPPROVER_ID");

                    b.ToTable("RECALL_APPROVER", (string)null);

                    b.HasComment("召回审批");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.SystemBasicData.Entity.BaseBorrowMode", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("DEPT_CODE")
                        .HasComment("科室编码");

                    b.Property<string>("HospCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<string>("InputCode")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("IsEnable")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("IS_ENABLE")
                        .HasComment("是否启用");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("ModeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("MODE_NAME")
                        .HasComment("模板名称");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("院区编码");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("USER_CODE")
                        .HasComment("用户编码");

                    b.HasKey("Id");

                    b.ToTable("BASE_BORROW_MODE", (string)null);

                    b.HasComment("借阅模板设置");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.SystemBasicData.Entity.BaseWatermark", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("WATERMARK_ID")
                        .HasComment("主键ID");

                    b.Property<string>("Angle")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("ANGLE")
                        .HasComment("角度");

                    b.Property<string>("Big")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("BIG")
                        .HasComment("大小");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("COLOR")
                        .HasComment("颜色");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("Direction")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("DIRECTION")
                        .HasComment("方向");

                    b.Property<string>("Font")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("FONT")
                        .HasComment("字体");

                    b.Property<string>("Hight")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("HIGHT")
                        .HasComment("高度");

                    b.Property<string>("HospCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<string>("InputCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("INPUT_CODE")
                        .HasComment("辖区编码");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("IsSuitable")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("IS_SUITABLE")
                        .HasComment("是否合适大小");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("使用机构");

                    b.Property<int?>("Pellucidity")
                        .HasMaxLength(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PELLUCIDITY")
                        .HasComment("透明度");

                    b.Property<string>("PicX")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("PICX")
                        .HasComment("PicX");

                    b.Property<string>("PicY")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("PICY")
                        .HasComment("PicY");

                    b.Property<string>("Picture")
                        .HasColumnType("CLOB")
                        .HasColumnName("PICTURE")
                        .HasComment("图片");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("STATUS")
                        .HasComment("状态");

                    b.Property<string>("Style")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("STYLE")
                        .HasComment("样式");

                    b.Property<string>("UseScene")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("USE_SCENE")
                        .HasComment("使用场景");

                    b.Property<string>("WatermarkName")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("WATERMARK_NAME")
                        .HasComment("水印名称");

                    b.Property<string>("Width")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("WIDTH")
                        .HasComment("宽度");

                    b.Property<string>("Xstation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("XSTATION")
                        .HasComment("x坐标");

                    b.Property<string>("Ystation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("YSTATION")
                        .HasComment("y坐标");

                    b.HasKey("Id");

                    b.ToTable("BASE_WATERMARK", (string)null);

                    b.HasComment("水印表");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.SystemBasicData.Entity.CaseShelfManagement", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("HospCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<string>("InputCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("INPUT_CODE")
                        .HasComment("辖区编码");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("LineNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("LINE_NUMBER")
                        .HasComment("行数");

                    b.Property<string>("NumberOlumns")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("NUMBER_OLUMNS")
                        .HasComment("列数");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("机构编码");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.Property<string>("ShelfNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("SHELF_NO")
                        .HasComment("病架号");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("STATUS")
                        .HasComment("状态");

                    b.Property<string>("StorageNumberSegment")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("STORAGE_NUMBER_SEGMENT")
                        .HasComment("存储号段");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("WAREHOUSE_NAME")
                        .HasComment("仓库名称");

                    b.Property<string>("WarehouseNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("WAREHOUSE_NUMBER")
                        .HasComment("仓库编号");

                    b.HasKey("Id");

                    b.ToTable("CASE_SHELF_MANAGEMENT", (string)null);

                    b.HasComment("纸质病例存储管理");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.SystemBasicData.Entity.DeptMeMenuTreeEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<string>("ArchiverMeumId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ARCHIVER_MEUM_ID")
                        .HasComment("归档目录模板ID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("DeptId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("DEPT_ID")
                        .HasComment("科室ID");

                    b.Property<string>("HospCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<string>("InputCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("INPUT_CODE")
                        .HasComment("辖区编码");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("IsRequired")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("IS_REQUIRED")
                        .HasComment("是否必填");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("使用机构");

                    b.Property<string>("ParentId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("PARENT_ID")
                        .HasComment("上级目录ID");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.HasKey("Id");

                    b.ToTable("DEPT_MEUM_TREE", (string)null);

                    b.HasComment("必传文件配置");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.SystemBasicData.Entity.EssentialDocuments", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("DEPT_CODE")
                        .HasComment("科室编码");

                    b.Property<string>("FatherMeumid")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("FATHER_MEUMID")
                        .HasComment("目录编码");

                    b.Property<string>("HospCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<string>("InputCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("INPUT_CODE")
                        .HasComment("辖区编码");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("MeumType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("MEUM_TYPE")
                        .HasComment("目录类型");

                    b.Property<int?>("OrderId")
                        .HasMaxLength(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORDERID")
                        .HasComment("排序");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("使用机构");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("STATUS")
                        .HasComment("状态");

                    b.HasKey("Id");

                    b.ToTable("ESSENTIAL_DOCUMENTS", (string)null);

                    b.HasComment("必传文件配置");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.SystemBasicData.Entity.PayConfig", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<int>("AppId")
                        .HasMaxLength(40)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("APP_ID")
                        .HasComment("AppID");

                    b.Property<string>("AppSecret")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("APP_SECRET")
                        .HasComment("AppSecret");

                    b.Property<string>("CallbackUrl")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CALLBACK_URL")
                        .HasComment("回调URL");

                    b.Property<string>("Completionnotification")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("COMPLETIONNOTIFICATION")
                        .HasComment("支付成功通知模板");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<string>("EncryptionKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("ENCRYPTION_KEY")
                        .HasComment("加密密钥");

                    b.Property<string>("HospCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<string>("InputCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("INPUT_CODE")
                        .HasComment("辖区编码");

                    b.Property<string>("InterfaceVersion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("INTERFACE_VERSION")
                        .HasComment("接口版本");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<int>("IsEnable")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("IS_ENABLE")
                        .HasComment("是否启用");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("MerchantNumber")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("NVARCHAR2(40)")
                        .HasColumnName("MERCHANT_NUMBER")
                        .HasComment("商户号");

                    b.Property<string>("OrgCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("机构编码");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.Property<string>("ServiceProviders")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("NVARCHAR2(30)")
                        .HasColumnName("SERVICE_PROVIDERS")
                        .HasComment("服务提供者");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("TOKEN")
                        .HasComment("Token");

                    b.HasKey("Id");

                    b.ToTable("PAY_CONFIG", (string)null);

                    b.HasComment("支付配置表");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.SystemBasicData.Entity.SysOperLog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ID")
                        .HasComment("主键ID");

                    b.Property<string>("BusinessType")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("BUSINESS_TYPE")
                        .HasComment("业务类型");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATION_TIME")
                        .HasComment("创建时间");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("CREATOR_ID")
                        .HasComment("创建人ID");

                    b.Property<long>("Elapsed")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ELAPSED")
                        .HasComment("操作用时");

                    b.Property<string>("ErrorMsg")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("ERROR_MSG")
                        .HasComment("错误消息");

                    b.Property<string>("HospCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("HOSP_CODE")
                        .HasComment("院区编码");

                    b.Property<string>("InputCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("INPUT_CODE")
                        .HasComment("辖区编码");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED")
                        .HasComment("删除标识");

                    b.Property<string>("JsonResult")
                        .HasColumnType("CLOB")
                        .HasColumnName("JSON_RESULT")
                        .HasComment("返回参数");

                    b.Property<string>("LastModifyId")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LAST_MODIFY_ID")
                        .HasComment("更新者ID");

                    b.Property<DateTime?>("LastModifyTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_MODIFY_TIME")
                        .HasComment("最后修改时间");

                    b.Property<string>("OperAddr")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("OPER_ADDR")
                        .HasComment("操作地址");

                    b.Property<string>("OperIp")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("OPER_IP")
                        .HasComment("操作IP地址");

                    b.Property<string>("OperName")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("OPER_NAME")
                        .HasComment("操作人");

                    b.Property<DateTime>("OperTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("OPER_TIME")
                        .HasComment("操作时间");

                    b.Property<string>("OperatorType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("OPERATOR_TYPE")
                        .HasComment("操作类别");

                    b.Property<string>("OrgCode")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ORG_CODE")
                        .HasComment("机构编码");

                    b.Property<string>("RequestMethod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("REQUEST_METHOD")
                        .HasComment("请求方法名");

                    b.Property<string>("RequestParam")
                        .HasColumnType("CLOB")
                        .HasColumnName("REQUEST_PARAM")
                        .HasComment("请求参数");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("REQUEST_TYPE")
                        .HasComment("请求方式");

                    b.Property<string>("RequestUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("REQUEST_URL")
                        .HasComment("请求Url");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("RAW(8)")
                        .HasColumnName("ROW_VERSION")
                        .HasComment("版本号");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("STATUS")
                        .HasComment("操作状态");

                    b.Property<string>("Title")
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("TITLE")
                        .HasComment("操作模块");

                    b.HasKey("Id");

                    b.ToTable("SYS_OPER_LOG", (string)null);

                    b.HasComment("系统操作日志");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.ArchiveRecord.Entity.ArchiveApprover", b =>
                {
                    b.HasOne("Trasen.PaperFree.Domain.ArchiveRecord.Entity.ArchiveApply", "ArchiveApply")
                        .WithMany("ArchiveApprovers")
                        .HasForeignKey("ArchiveApplyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ARCHIVE_APPLY_ID");

                    b.Navigation("ArchiveApply");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.ProcessRecord.Entity.NodeApprover", b =>
                {
                    b.HasOne("Trasen.PaperFree.Domain.ProcessRecord.Entity.ProcessNode", "ProcessNode")
                        .WithMany("NodeApprovers")
                        .HasForeignKey("ProcessNodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PROCESS_NODE_ID");

                    b.Navigation("ProcessNode");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.ProcessRecord.Entity.ProcessNode", b =>
                {
                    b.HasOne("Trasen.PaperFree.Domain.ProcessRecord.Entity.ProcessDesign", "ProcessDesign")
                        .WithMany("ProcessNodes")
                        .HasForeignKey("ProcessDesignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PROCESS_DESIGN_ID");

                    b.Navigation("ProcessDesign");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.RecallRecord.Entity.RecallApplyAndArchival", b =>
                {
                    b.HasOne("Trasen.PaperFree.Domain.RecallRecord.Entity.RecallApply", "RecallApply")
                        .WithMany("RecallApplyAndArchivals")
                        .HasForeignKey("RecallApplyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RECALL_APPLY_ID");

                    b.Navigation("RecallApply");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.RecallRecord.Entity.RecallApprover", b =>
                {
                    b.HasOne("Trasen.PaperFree.Domain.RecallRecord.Entity.RecallApply", "RecallApply")
                        .WithMany("ArchiveApprovers")
                        .HasForeignKey("RecallApplyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RECALLAPPROVER_ID");

                    b.Navigation("RecallApply");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.ArchiveRecord.Entity.ArchiveApply", b =>
                {
                    b.Navigation("ArchiveApprovers");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.ProcessRecord.Entity.ProcessDesign", b =>
                {
                    b.Navigation("ProcessNodes");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.ProcessRecord.Entity.ProcessNode", b =>
                {
                    b.Navigation("NodeApprovers");
                });

            modelBuilder.Entity("Trasen.PaperFree.Domain.RecallRecord.Entity.RecallApply", b =>
                {
                    b.Navigation("ArchiveApprovers");

                    b.Navigation("RecallApplyAndArchivals");
                });
#pragma warning restore 612, 618
        }
    }
}
